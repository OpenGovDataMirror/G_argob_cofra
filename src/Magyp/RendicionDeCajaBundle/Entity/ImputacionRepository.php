<?php

namespace Magyp\RendicionDeCajaBundle\Entity;

use Doctrine\ORM\EntityRepository;

/**
 * ImputacionRepository
 *
 * This class was generated by the Doctrine ORM. Add your own custom
 * repository methods below.
 */
class ImputacionRepository extends EntityRepository
{
	public function buscarImputaciones(){
		
		$qb=  $this->qb_buscarImputaciones();
		return $qb->getQuery()->getResult();
	}
	public function qb_buscarImputaciones(){
		$qb= $this->createQueryBuilder('i')
				    ->select('i')
				    ->where('i.borrado = 0')
				    ->orderBy('i.codigo');
		return $qb;
	}

        public function buscarBorradosOrdenados($idrendicion){
	    return $this->qbBuscarBorrados($idrendicion)->getResult();
	}
        public function qbBuscarBorrados($idrendicion){

		$qb = $this->createQueryBuilder('imp')
				->select('imp',"max(EI.fecha)","count(EI)")
                                ->join("imp.eventoimputaciones", "EI")
				->where("imp.borrado = 1")
				->groupBy("imp.id")
				->orderBy('EI.fecha','DESC')
				;
				
		return $qb->getQuery();
		;
	}
	
	public function ImputacionesPaginadas($pagina,$cantporpagina){
		$qb= $this->createQueryBuilder('i')
				    ->select('i')
				    ->where('i.borrado = 0')
				    ->orderBy('i.codigo')
				    ->setFirstResult($pagina * $cantporpagina)
				    ->setMaxResults($cantporpagina);
		return $qb->getQuery()->getResult();
	}
	public function qbBuscar($buscar){
	    //$buscar = 'Otros';
	    
		$qb= $this->createQueryBuilder('i')
				    ->select('i')				    
				    ->where('i.borrado = 0');
				    if($buscar != ''){
//					$qb->andWhere('i.descripcion LIKE :buscar')
//					->setParameter("buscar", '%' . $buscar . '%');
//					$qb->orWhere('i.codigo LIKE :codigo')
//					->setParameter("codigo", '%' . $buscar . '%');
                                     
                                        $qb->andWhere($qb->expr()->orX()->add("i.descripcion LIKE :descripcion")
                                                ->add("i.codigo LIKE :codigo")
                                                )
                                        ->setParameter("descripcion", '%' . $buscar . '%')
                                        ->setParameter("codigo", '%' . $buscar . '%');
                                        }   
				    
				    $qb->orderBy('i.codigo');
				    
		return $qb->getQuery();
	}
	public function qbImputacion($id){
	    //$buscar = 'Otros';
		$qb= $this->createQueryBuilder('i')
				    ->select('i')
				    ->where('i.id = :id')
				    ->setParameter("id",$id)
                                    ->andWhere('i.borrado = 0');
		return $qb->getQuery();
	}
}
