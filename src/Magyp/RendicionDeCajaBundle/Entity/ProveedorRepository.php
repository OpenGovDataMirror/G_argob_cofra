<?php

namespace Magyp\RendicionDeCajaBundle\Entity;

use Doctrine\ORM\EntityRepository;

/**
  *
 * This class was generated by the Doctrine ORM. Add your own custom
 * repository methods below.
 */
class ProveedorRepository extends EntityRepository
{

	public function like($dato) {

		$qb = $this->createQueryBuilder('p')
				->select('p')
				->where('p.descripcion LIKE :dato')
				->setParameter("dato", '%' . $dato . '%')
				->setMaxResults(100);
		;

		return $qb->getQuery()->getResult();
	}
	
	public function buscarProveedores() {
	    $qb= $this->qb_buscarProveedores();
	    return $qb->getQuery()->getResult();
	}
	
	public function qb_buscarProveedores() {	    
		$qb = $this->createQueryBuilder('p')
				->select('p')
				->where('p.borrado = 0')
				->orderBy('p.descripcion');
		return $qb;
	}
        
        public function buscarBorradosOrdenados($idarea){

		$qb = $this->createQueryBuilder('pro')
				->select('pro',"max(EP.fecha)","count(EP)")
                                ->join("pro.eventoproveedores", "EP")
				->where("pro.borrado = 1")
                                ->andWhere("pro.area  = :idarea")
                                ->setParameter("idarea", $idarea)
				->groupBy("pro.id")
				->orderBy('EP.fecha','DESC')
				;
				
		return $qb->getQuery()->getResult();
		;
	}
	public function seleccionar($lista){
	     
		$qb = $this->createQueryBuilder('pro')
				->select('pro')                                
				->where("pro.cuit IN (:lista)")
			
				->setParameter("lista", $lista);
				;
				
				
		return $qb->getQuery()->getResult();
		;
	}

	public function qbBuscar($buscar){
		$qb= $this->createQueryBuilder('p')
				    ->select('p')
				    ->where('p.borrado = 0');
				    if($buscar != ''){
                                        $qb->andWhere($qb->expr()->orX()->add("p.descripcion LIKE :descripcion")
                                                ->add("p.cuit LIKE :cuit")
                                                )
                                        ->setParameter("descripcion", '%' . $buscar . '%')
                                        ->setParameter("cuit", '%' . $buscar . '%');
				    }
				$qb->orderBy('p.descripcion');
				    
		return $qb->getQuery();
	}
	public function qbProveedor($id){
	    //$buscar = 'Otros';
		$qb= $this->createQueryBuilder('p')
				    ->select('p')
				    ->where('p.id = :id')
				    ->setParameter("id",$id);				    
		return $qb->getQuery();
	}
	
	 public function buscarBorradosOrdenadosAf($idarea){

		$qb = $this->createQueryBuilder('pro')
				->select('pro',"max(EP.fecha)","count(EP)")
                                ->join("pro.eventoproveedores", "EP")
				->where("pro.borrado = 1")
				->groupBy("pro.id")
				->orderBy('EP.fecha','DESC')
				;
				
		return $qb->getQuery()->getResult();
		;
	}
}
